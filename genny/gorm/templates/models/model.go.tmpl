package {{.Model.Package}}

import (
	{{ range $i := .Model.Imports -}}
	"{{$i}}"
	{{ end -}}
	{{ if .Model.ValidatableAttributes -}}
	"github.com/gobuffalo/validate/validators"
	{{ end -}}
)

type {{.ModelName.CamelSingular}} struct {
	{{range $a := .Model.Attributes -}}
	{{$a}}
	{{end -}}
}

// String is not required by pop and may be deleted
func ({{.Char}} {{.ModelName.CamelSingular}}) String() string {
	j{{.Char}}, _ := json.Marshal({{.Char}})
	return string(j{{.Char}})
}

// {{.ModelName.ModelPlural}} is not required by pop and may be deleted
type {{.ModelName.ModelPlural}} []{{.ModelName.CamelSingular}}

// String is not required by pop and may be deleted
func ({{.Char}} {{.ModelName.ModelPlural}}) String() string {
	j{{.Char}}, _ := json.Marshal({{.Char}})
	return string(j{{.Char}})
}

func ({{.Char}} *{{.ModelName.CamelSingular}}) BeforeCreate(tx *gorm.DB) (err error) {
	if {{.Char}}.ID != uuid.Nil {
		return nil
	}
	{{.Char}}.ID, err = uuid.NewV4()
	return err
}

// Validate gets run every time you call a "pop.Validate*" (pop.ValidateAndSave, pop.ValidateAndCreate, pop.ValidateAndUpdate) method.
// This method is not required and may be deleted.
func ({{.Char}} *{{.ModelName.CamelSingular}}) Validate(tx *gorm.DB) (*validate.Errors, error) {
	{{ if .Model.ValidatableAttributes -}}
	return validate.Validate(
		{{ range $a := .Model.ValidatableAttributes -}}
		&validators.{{capitalize $a.GoType}}IsPresent{Field: {{$.Char}}.{{$a.Name.Camel}}, Name: "{{$a.Name.Camel}}"},
		{{end -}}
	), nil
	{{ else -}}
		return validate.NewErrors(), nil
	{{ end -}}
}

// ValidateCreate gets run every time you call "pop.ValidateAndCreate" method.
// This method is not required and may be deleted.
func ({{.Char}} *{{.ModelName.CamelSingular}}) ValidateCreate(tx *gorm.DB) (*validate.Errors, error) {
	verrs, err := {{.Char}}.Validate(tx)
	if verrs.HasAny() {
		return verrs, errors.WithStack(err)
	}
	e := tx.Create({{.Char}})
	return verrs, e.Error
}

// ValidateUpdate gets run every time you call "pop.ValidateAndUpdate" method.
// This method is not required and may be deleted.
func ({{.Char}} *{{.ModelName.CamelSingular}}) ValidateUpdate(tx *gorm.DB) (*validate.Errors, error) {
	verrs, err := {{.Char}}.Validate(tx)
	if verrs.HasAny() {
		return verrs, errors.WithStack(err)
	}
	e := tx.Model({{.Char}}).Updates({{.Char}})
	return verrs, e.Error
}